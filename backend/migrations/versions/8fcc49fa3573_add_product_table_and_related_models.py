"""Add product table and related models

Revision ID: 8fcc49fa3573
Revises: de2db0bd6fd9
Create Date: 2025-04-24 21:53:09.340347

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8fcc49fa3573'
down_revision = 'de2db0bd6fd9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=120), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['product_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product_category', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_category_slug'), ['slug'], unique=True)

    op.create_table('product_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('slug', sa.String(length=60), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('product_tag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_tag_slug'), ['slug'], unique=True)

    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('slug', sa.String(length=250), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('short_description', sa.String(length=500), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('original_price', sa.Float(), nullable=True),
    sa.Column('sku', sa.String(length=50), nullable=True),
    sa.Column('stock_quantity', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('images', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('specifications', sa.Text(), nullable=True),
    sa.Column('warning_stock', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['product_category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sku')
    )
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_slug'), ['slug'], unique=True)

    op.create_table('product_stock',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('total_stock', sa.Integer(), nullable=False),
    sa.Column('available_stock', sa.Integer(), nullable=False),
    sa.Column('prelock_stock', sa.Integer(), nullable=False),
    sa.CheckConstraint('available_stock + prelock_stock <= total_stock', name='check_stock_logic'),
    sa.CheckConstraint('available_stock >= 0', name='check_available_stock_non_negative'),
    sa.CheckConstraint('prelock_stock >= 0', name='check_prelock_stock_non_negative'),
    sa.CheckConstraint('total_stock >= 0', name='check_total_stock_non_negative'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id')
    )
    op.create_table('product_tag_relation',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['product_tag.id'], ),
    sa.PrimaryKeyConstraint('product_id', 'tag_id')
    )
    op.create_table('stock_log',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('change_type', sa.SmallInteger(), nullable=False),
    sa.Column('change_amount', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.String(length=50), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('remark', sa.String(length=200), nullable=True),
    sa.Column('created_time', sa.DateTime(), nullable=True),
    sa.Column('operation_type', sa.String(length=20), nullable=True),
    sa.Column('before_total', sa.Integer(), nullable=True),
    sa.Column('before_available', sa.Integer(), nullable=True),
    sa.Column('before_prelock', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    with op.batch_alter_table('coupon', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_unique_constraint('uq_coupon_code', ['code'])

    with op.batch_alter_table('member_level', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)

    with op.batch_alter_table('points_record', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text('(NULL)'))
        batch_op.create_index(batch_op.f('ix_user_phone'), ['phone'], unique=True)
        batch_op.create_foreign_key(None, 'member_level', ['member_level_id'], ['id'])

    with op.batch_alter_table('user_coupon', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)

    with op.batch_alter_table('user_custom_field', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_unique_constraint('user_field_key_unique', ['user_id', 'field_key'])

    with op.batch_alter_table('user_field_definition', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_unique_constraint(None, ['field_key'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_field_definition', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('user_custom_field', schema=None) as batch_op:
        batch_op.drop_constraint('user_field_key_unique', type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('user_coupon', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_user_phone'))
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text('(NULL)'))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)

    with op.batch_alter_table('points_record', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('member_level', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('coupon', schema=None) as batch_op:
        batch_op.drop_constraint('uq_coupon_code', type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    op.drop_table('stock_log')
    op.drop_table('product_tag_relation')
    op.drop_table('product_stock')
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_slug'))

    op.drop_table('product')
    with op.batch_alter_table('product_tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_tag_slug'))

    op.drop_table('product_tag')
    with op.batch_alter_table('product_category', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_category_slug'))

    op.drop_table('product_category')
    # ### end Alembic commands ###
